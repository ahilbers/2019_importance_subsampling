import:
    - 'techs.yaml' 
    - 'locations.yaml'

model:
    name: 6-region model
    calliope_version: 0.6.6
    timeseries_data_path: ''

run:
    objective_options.cost_class.monetary: 1
    solver: cbc
    zero_threshold: 1e-10  # Round any value smaller to 0

overrides:
    plan:
    # planning mode -- determine capacities
        run.mode: plan
    continuous:
    # continuous baseload capacity
        techs.baseload_region1.constraints.energy_cap_max: inf
        techs.baseload_region3.constraints.energy_cap_max: inf
        techs.baseload_region6.constraints.energy_cap_max: inf
    integer:
    # baseload capacity in units of 3GW
        techs.baseload_region1.constraints.units_max: inf
        techs.baseload_region1.constraints.energy_cap_per_unit: 3
        techs.baseload_region3.constraints.units_max: inf
        techs.baseload_region3.constraints.energy_cap_per_unit: 3
        techs.baseload_region6.constraints.units_max: inf
        techs.baseload_region6.constraints.energy_cap_per_unit: 3
    allow_unmet:
    # plan mode only -- unmet always allowed in operate mode
        techs.unmet_region2.costs.monetary.energy_cap: 0
        techs.unmet_region4.costs.monetary.energy_cap: 0
        techs.unmet_region5.costs.monetary.energy_cap: 0
    operate:
    # operate mode -- fixed capacities. These default values can be
    # overwritten via fixed_caps argument in models.py
        run:
            mode: operate
            cyclic_storage: False
            operation:
                horizon: 2496  # hours
                window: 2160  # hours
        locations:
            region1:
                techs.baseload_region1.constraints.energy_cap_equals: 10
                techs.peaking_region1.constraints.energy_cap_equals: 40
            region2:
                techs.wind_region2.constraints.resource_area_equals: 70
                techs.unmet_region2.constraints.energy_cap_equals: 1e10
            region3:
                techs.baseload_region3.constraints.energy_cap_equals: 20
                techs.peaking_region3.constraints.energy_cap_equals: 50
            region4:
                techs.unmet_region4.constraints.energy_cap_equals: 1e10
            region5:
                techs.wind_region5.constraints.resource_area_equals: 80
                techs.unmet_region5.constraints.energy_cap_equals: 1e10
            region6:
                techs.baseload_region6.constraints.energy_cap_equals: 30
                techs.peaking_region6.constraints.energy_cap_equals: 60
                techs.wind_region6.constraints.resource_area_equals: 90
        links:
            region1,region2:
                techs.transmission_region1_region2.constraints.energy_cap_equals: 12
            region1,region5:
                techs.transmission_region1_region5.constraints.energy_cap_equals: 15
            region1,region6:
                techs.transmission_region1_region6.constraints.energy_cap_equals: 16
            region2,region3:
                techs.transmission_region2_region3.constraints.energy_cap_equals: 23
            region3,region4:
                techs.transmission_region3_region4.constraints.energy_cap_equals: 34
            region4,region5:
                techs.transmission_region4_region5.constraints.energy_cap_equals: 45
            region5,region6:
                techs.transmission_region5_region6.constraints.energy_cap_equals: 56
    ramping:
        techs.baseload_region1.constraints.energy_ramping: 0.2  # frac/hr
        techs.baseload_region3.constraints.energy_ramping: 0.2  # frac/hr
        techs.baseload_region6.constraints.energy_ramping: 0.2  # frac/hr
    gurobi:
    # run with gurobi (faster commercial solver)
        run.solver: gurobi
